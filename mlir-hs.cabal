cabal-version:      3.4
name:               mlir-hs

-- The package version.
-- See the Haskell package versioning policy (PVP) for standards
-- guiding when and how versions should be incremented.
-- https://pvp.haskell.org
-- PVP summary:     +-+------- breaking API changes
--                  | | +----- non-breaking API additions
--                  | | | +--- code changes with no API change
version:            0.1.0.0

synopsis:           Haskell binding to MLIR

-- A longer description of the package.
-- description:

-- The license under which the package is released.
license:            GPL-3.0-or-later

-- The file containing the license text.
license-file:       LICENSE

-- The package author(s).
author:             k355l3r-5yndr0m3

-- An email address to which users can send suggestions, bug reports, and patches.
maintainer:         hoanghung17jan@gmail.com

-- A copyright notice.
-- copyright:
category:           Language
build-type:         Configure

-- Extra doc files to be distributed with the package, such as a CHANGELOG or a README.
extra-doc-files:    CHANGELOG.md

-- Extra source files to be distributed with the package, such as examples, or a tutorial module.
extra-source-files: configure
                    cbit/*.h

flag EnableDialectArith
    description: Enable the arith dialect
    default:     True
    manual:      True

flag EnableDialectAsync
    description: Enable the async dialect
    default:     True
    manual:      True

flag EnableDialectControlFlow
    default:     True
    manual:      True

flag EnableDialectFunc
    default:     True
    manual:      True
flag EnableDialectGPU
    default:     True
    manual:      True

flag EnableDialectLinalg
    default:     True
    manual:      True

flag EnableDialectLLVM
    default:     True
    manual:      True

flag EnableDialectMath
    default:     True
    manual:      True

flag EnableDialectMemRef
    default:     True
    manual:      True

flag EnableDialectMLProgram
    default:     True
    manual:      True

flag EnableDialectPDL
    default:     True
    manual:      True

flag EnableDialectQuant
    default:     True
    manual:      True

flag EnableDialectSCF
    default:     True
    manual:      True

flag EnableDialectShape
    default:     True
    manual:      True

flag EnableDialectSparseTensor
    default:     True
    manual:      True

flag EnableDialectTensor
    default:     True
    manual:      True

flag EnableDialectTransform
    default:     True
    manual:      True

flag EnableDialectVector
    default:     True
    manual:      True

common warnings
    ghc-options: -Wall

common devel
    ghc-options: -ddump-splices
                 -ddump-to-file
                 -haddock

library
    import:           warnings,
                      devel


    exposed-modules:  MLIR
                      MLIR.IR
                      MLIR.BuiltinTypes
                      MLIR.BuiltinAttributes
                      MLIR.TH
    if flag(EnableDialectArith)
          exposed-modules:
                      MLIR.Dialect.Arith
    if flag(EnableDialectAsync)
          exposed-modules:
                      MLIR.Dialect.Async
    if flag(EnableDialectControlFlow)
          exposed-modules:
                      MLIR.Dialect.ControlFlow
    if flag(EnableDialectFunc)
          exposed-modules:
                      MLIR.Dialect.Func
    if flag(EnableDialectGPU)
          exposed-modules:
                      MLIR.Dialect.GPU
    if flag(EnableDialectLinalg)
          exposed-modules:
                      MLIR.Dialect.Linalg
    if flag(EnableDialectLLVM)
          exposed-modules:
                      MLIR.Dialect.LLVM
    if flag(EnableDialectMath)
          exposed-modules:
                      MLIR.Dialect.Math
    if flag(EnableDialectMemRef)
          exposed-modules:
                      MLIR.Dialect.MemRef
    if flag(EnableDialectMLProgram)
          exposed-modules:
                      MLIR.Dialect.MLProgram
    if flag(EnableDialectPDL)
          exposed-modules:
                      MLIR.Dialect.PDL
    if flag(EnableDialectQuant)
          exposed-modules:
                      MLIR.Dialect.Quant
    if flag(EnableDialectSCF)
          exposed-modules:
                      MLIR.Dialect.SCF
    if flag(EnableDialectShape)
          exposed-modules:
                      MLIR.Dialect.Shape
    if flag(EnableDialectSparseTensor)
          exposed-modules:
                      MLIR.Dialect.SparseTensor
    if flag(EnableDialectTensor)
          exposed-modules:
                      MLIR.Dialect.Tensor
    if flag(EnableDialectTransform)
          exposed-modules:
                      MLIR.Dialect.Transform
    if flag(EnableDialectVector)
          exposed-modules:
                      MLIR.Dialect.Vector

                      

    other-modules:    MLIR.FFI.Support
                      MLIR.FFI.AffineExpr
                      MLIR.FFI.IR
                      MLIR.FFI.IntegerSet
                      MLIR.FFI.AffineMap
                      MLIR.FFI.Interfaces
                      MLIR.FFI.BuiltinTypes
                      MLIR.FFI.BuiltinAttributes
                      MLIR.FFI.Marshal
                      Tablegen
    if flag(EnableDialectFunc)
        other-modules:
                      MLIR.Dialect.Func.Extra
    if flag(EnableDialectLLVM)
        other-modules:
                      MLIR.Dialect.LLVM.Extra
    if flag(EnableDialectPDL)
        other-modules:
                      MLIR.Dialect.PDL.Extra

    c-sources:        cbit/callback.c
                      cbit/wrapper.c

    build-depends:    base ^>=4.17.2.1,
                      vector,
                      text,
                      aeson,
                      mtl,
                      containers,
                      filepath,
                      directory,
                      primitive,
                      process,
                      template-haskell,

    hs-source-dirs:   src

    include-dirs:     cbit
    includes:         wrapper.h

    extra-libraries:  stdc++

    default-language: GHC2021

test-suite mlir-hs-linking-test
    import:           warnings, devel
    default-language: GHC2021
    type:             exitcode-stdio-1.0
    hs-source-dirs:   test
    main-is:          MLIR.hs
    build-depends:
        base ^>=4.17.2.1,
        mlir-hs

test-suite mlir-hs-bytecode-test
    import:           warnings,
                      devel
    default-language: GHC2021
    type:             exitcode-stdio-1.0
    hs-source-dirs:   test
    main-is:          BytecodeTest.hs
    build-depends:
        base ^>=4.17.2.1,
        directory,
        mlir-hs


test-suite mlir-hs-llvm-test
    import:           warnings,
                      devel
    default-language: GHC2021
    if flag(EnableDialectLLVM)
        type:         exitcode-stdio-1.0
        main-is:      LLVMTest.hs
    else
        type:         exitcode-stdio-1.0
        main-is:      Dummy.hs
    hs-source-dirs:   test
    build-depends:
        base ^>=4.17.2.1,
        mlir-hs

test-suite mlir-hs-func-test
    import:           warnings, devel
    default-language: GHC2021
    if flag(EnableDialectFunc)
        type:         exitcode-stdio-1.0
        main-is:      FuncTest.hs
    else
        type:         exitcode-stdio-1.0
        main-is:      Dummy.hs

    hs-source-dirs:   test
    build-depends:
        base ^>=4.17.2.1,
        mlir-hs

test-suite mlir-hs-arith-test
    import:           warnings, devel
    default-language: GHC2021
    hs-source-dirs:   test
    if flag(EnableDialectArith)
        -- This might be a bug
        -- type: must be inside if else block (all branch)
        -- will fail if outside
        type:         exitcode-stdio-1.0
        main-is:      ArithTest.hs
    else
        type:         exitcode-stdio-1.0
        main-is:      Dummy.hs   
    build-depends:
        base ^>=4.17.2.1,
        mlir-hs

test-suite mlir-hs-async-test
    import:           warnings, devel
    default-language: GHC2021
    hs-source-dirs:   test
    if flag(EnableDialectAsync)
        type:         exitcode-stdio-1.0
        main-is:      AsyncTest.hs
    else
        type:         exitcode-stdio-1.0
        main-is:      Dummy.hs
    build-depends:
        base ^>=4.17.2.1,
        mlir-hs

test-suite mlir-hs-cf-test
    import:           warnings, devel
    default-language: GHC2021
    if flag(EnableDialectControlFlow)
        type:         exitcode-stdio-1.0
        main-is:      ControlFlowTest.hs
    else
        type:         exitcode-stdio-1.0
        main-is:      Dummy.hs
    hs-source-dirs:   test
    build-depends:
        base ^>=4.17.2.1,
        mlir-hs

test-suite mlir-hs-gpu-test
    import:           warnings, devel
    default-language: GHC2021
    if flag(EnableDialectGPU)
        type:         exitcode-stdio-1.0
        main-is:      GPUTest.hs
    else
        type:         exitcode-stdio-1.0
        main-is:      Dummy.hs
    hs-source-dirs:   test
    build-depends:
        base ^>=4.17.2.1,
        mlir-hs

test-suite mlir-hs-linalg-test
    import:           warnings, devel
    default-language: GHC2021
    if flag(EnableDialectLinalg)
        type:         exitcode-stdio-1.0
        main-is:      LinalgTest.hs
    else
        type:         exitcode-stdio-1.0
        main-is:      Dummy.hs

    hs-source-dirs:   test
    build-depends:
        base ^>=4.17.2.1,
        mlir-hs

test-suite mlir-hs-math-test
    import:           warnings, devel
    default-language: GHC2021
    if flag(EnableDialectMath)
        type:         exitcode-stdio-1.0
        main-is:      MathTest.hs
    else
        type:         exitcode-stdio-1.0
        main-is:      Dummy.hs

    hs-source-dirs:   test
    build-depends:
        base ^>=4.17.2.1,
        mlir-hs

test-suite mlir-hs-memref-test
    import:           warnings, devel
    default-language: GHC2021
    if flag(EnableDialectMemRef)
        type:         exitcode-stdio-1.0
        main-is:      MemRefTest.hs
    else
        type:         exitcode-stdio-1.0
        main-is:      Dummy.hs
    hs-source-dirs:   test
    build-depends:
        base ^>=4.17.2.1,
        mlir-hs

test-suite mlir-hs-ml-program-test
    import:           warnings, devel
    default-language: GHC2021
    if flag(EnableDialectMLProgram)
        type:         exitcode-stdio-1.0
        main-is:      MLProgramTest.hs
    else
        type:         exitcode-stdio-1.0
        main-is:      Dummy.hs
    hs-source-dirs:   test
    build-depends:
        base ^>=4.17.2.1,
        mlir-hs

test-suite mlir-hs-pdl-test
    import:           warnings, devel
    default-language: GHC2021
    if flag(EnableDialectPDL)
        type:         exitcode-stdio-1.0
        main-is:      PDLTest.hs
    else
        type:         exitcode-stdio-1.0
        main-is:      Dummy.hs
    hs-source-dirs:   test
    build-depends:
        base ^>=4.17.2.1,
        mlir-hs

test-suite mlir-hs-quant-test
    import:           warnings, devel
    default-language: GHC2021
    if flag(EnableDialectQuant)
        type:         exitcode-stdio-1.0
        main-is:      QuantTest.hs
    else
        type:         exitcode-stdio-1.0
        main-is:      Dummy.hs
    hs-source-dirs:   test
    build-depends:
        base ^>=4.17.2.1,
        mlir-hs

test-suite mlir-hs-scf-test
    import:           warnings, devel
    default-language: GHC2021
    if flag(EnableDialectSCF)
        type:         exitcode-stdio-1.0
        main-is:      SCFTest.hs
    else
        type:         exitcode-stdio-1.0
        main-is:      Dummy.hs
    hs-source-dirs:   test
    build-depends:
        base ^>=4.17.2.1,
        mlir-hs

test-suite mlir-hs-shape-test
    import:           warnings, devel
    default-language: GHC2021
    if flag(EnableDialectShape)
        type:         exitcode-stdio-1.0
        main-is:      ShapeTest.hs
    else
        type:         exitcode-stdio-1.0
        main-is:      Dummy.hs
    hs-source-dirs:   test
    build-depends:
        base ^>=4.17.2.1,
        mlir-hs

test-suite mlir-hs-sparse-tensor-test
    import:           warnings, devel
    default-language: GHC2021
    if flag(EnableDialectTensor)
        type:         exitcode-stdio-1.0
        main-is:      SparseTensorTest.hs
    else
        type:         exitcode-stdio-1.0
        main-is:      Dummy.hs
    hs-source-dirs:   test
    build-depends:
        base ^>=4.17.2.1,
        mlir-hs

test-suite mlir-hs-tensor-test
    import:           warnings, devel
    default-language: GHC2021
    if flag(EnableDialectTensor)
        type:         exitcode-stdio-1.0
        main-is:      TensorTest.hs
    else
        type:         exitcode-stdio-1.0
        main-is:      Dummy.hs
    hs-source-dirs:   test
    build-depends:
        base ^>=4.17.2.1,
        mlir-hs

test-suite mlir-hs-transform-test
    import:           warnings, devel
    default-language: GHC2021
    if flag(EnableDialectTransform)
        type:         exitcode-stdio-1.0
        main-is:      TransformTest.hs
    else
        type:         exitcode-stdio-1.0
        main-is:      Dummy.hs
    hs-source-dirs:   test
    build-depends:
        base ^>=4.17.2.1,
        mlir-hs

test-suite mlir-hs-vector-test
    import:           warnings, devel
    default-language: GHC2021
    if flag(EnableDialectVector)
        type:         exitcode-stdio-1.0
        main-is:      VectorTest.hs
    else
        type:         exitcode-stdio-1.0
        main-is:      Dummy.hs

    hs-source-dirs:   test
    build-depends:
        base ^>=4.17.2.1,
        mlir-hs


